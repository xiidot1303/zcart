<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2023-10-02 21:22:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use App\Services\PackageInstaller; use Illuminate\Http\Request; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\DB; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\144\x6d\x69\x6e\x2e\160\141\x63\x6b\x61\x67\145\163\x2e\151\156\144\145\x78", compact("\x69\x6e\x73\x74\x61\x6c\154\141\142\154\x65\163", "\x69\156\x73\164\141\x6c\x6c\x73")); } public function upload() { return view("\x61\144\155\x69\x6e\56\x70\141\x63\x6b\x61\x67\145\163\x2e\x5f\x75\x70\154\x6f\x61\x64"); } public function save(Request $request) { echo "\74\160\162\x65\x3e"; print_r($request->all()); echo "\x3c\160\162\x65\76"; exit("\x65\156\x64\x21"); } public function initiate(Request $request, $package) { if (!(config("\x61\x70\160\x2e\x64\145\x6d\157") == true && config("\x61\160\160\56\x64\x65\x62\165\147") !== true)) { goto U_NMK; } return back()->with("\x77\x61\162\156\151\156\147", trans("\155\x65\163\163\141\147\145\x73\56\144\x65\155\157\x5f\x72\x65\x73\x74\x72\x69\143\164\151\157\x6e")); U_NMK: $installable = $this->scanPackages($package); if (!($installable && Package::where("\x73\154\x75\147", $installable["\x73\x6c\165\147"])->first())) { goto SitBa; } return back()->with("\x65\162\x72\157\x72", trans("\x6d\145\x73\x73\x61\x67\145\x73\56\160\141\x63\153\141\x67\145\137\151\156\163\x74\141\x6c\154\x65\144\137\x61\x6c\x72\145\141\144\x79", ["\160\141\x63\x6b\x61\147\145" => $package])); SitBa: return view("\141\144\155\151\156\x2e\x70\x61\x63\x6b\x61\147\145\x73\x2e\x5f\x69\x6e\x69\x74\x69\141\164\x65", compact("\151\156\x73\164\141\154\154\141\142\x6c\145")); } public function upgrade(Request $request, $package) { if (!(config("\141\x70\x70\x2e\144\145\x6d\x6f") == true && config("\x61\x70\160\56\144\145\142\x75\x67") !== true)) { goto ZXN73; } return back()->with("\167\x61\x72\x6e\151\x6e\x67", trans("\155\x65\x73\x73\141\x67\145\163\56\144\x65\155\x6f\137\x72\145\163\164\x72\151\143\x74\x69\x6f\x6e")); ZXN73: $installable = $this->scanPackages($package); if ($installable) { goto adWkp; } return back()->with("\x65\x72\x72\x6f\x72", trans("\x6d\x65\x73\x73\141\x67\x65\x73\x2e\x70\141\x63\153\x61\147\x65\x5f\x6e\x6f\164\137\146\157\165\156\x64", ["\x70\141\x63\153\x61\147\145" => $package])); adWkp: try { $installer = new PackageInstaller($request, $installable); $installer->migrate(); } catch (\Exception $e) { Log::error($e); return back()->with("\145\x72\162\157\x72", $e->getMessage()); } return back()->with("\x73\165\143\x63\145\163\163", trans("\x6d\x65\x73\163\x61\x67\145\x73\x2e\160\141\143\153\x61\147\x65\137\165\160\x67\x72\x61\144\x65\x64\x5f\163\x75\x63\x63\x65\163\163", ["\x70\x61\x63\x6b\141\147\145" => $package])); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\141\x70\x70\56\144\x65\x6d\157") == true && config("\141\160\x70\x2e\144\x65\142\165\147") !== true)) { goto iOHsR; } return back()->with("\x77\x61\162\156\151\156\x67", trans("\155\145\163\163\x61\147\145\163\56\x64\145\x6d\157\137\162\x65\x73\x74\x72\151\x63\164\x69\x6f\156")); iOHsR: $installable = $this->scanPackages($package); if ($installable) { goto PRTNT; } return back()->with("\145\162\162\x6f\162", trans("\155\x65\163\163\141\x67\x65\x73\x2e\x70\x61\x63\x6b\141\x67\x65\x5f\x6e\x6f\x74\137\x66\157\165\x6e\144", ["\x70\141\x63\x6b\x61\147\145" => $package])); PRTNT: try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); $registered = Package::where("\x73\154\x75\x67", $package)->first(); if (!$registered) { goto a0qC8; } $registered->delete(); a0qC8: return back()->with("\x65\x72\162\157\x72", $e->getMessage()); } Artisan::call("\x63\x61\x63\x68\x65\x3a\143\154\145\141\x72"); Artisan::call("\162\x6f\x75\x74\145\72\x63\154\145\141\162"); return back()->with("\x73\x75\143\143\145\x73\x73", trans("\155\145\163\x73\141\147\145\x73\x2e\x70\x61\143\153\x61\147\x65\x5f\151\x6e\x73\x74\141\x6c\x6c\145\x64\x5f\163\x75\143\x63\145\x73\x73", ["\160\141\143\153\x61\x67\145" => $package])); } public function uninstall(Request $request, $package) { if (!(config("\141\160\x70\x2e\x64\x65\155\x6f") == true && config("\141\160\x70\56\144\x65\x62\x75\x67") !== true)) { goto XyKes; } return back()->with("\167\141\x72\x6e\x69\156\x67", trans("\x6d\x65\x73\163\x61\147\x65\x73\56\144\x65\155\157\137\162\145\x73\x74\162\151\x63\x74\x69\157\x6e")); XyKes: $registered = Package::where("\163\154\x75\x67", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); try { $installer = new PackageInstaller($request, $uninstallable); if (!$installer->uninstall()) { goto izXKo; } Artisan::call("\143\x61\143\x68\145\x3a\143\154\145\x61\x72"); Artisan::call("\162\157\x75\x74\x65\72\143\x6c\145\141\x72"); if (!$registered->delete()) { goto F2P50; } return back()->with("\163\165\x63\143\x65\x73\x73", trans("\x6d\x65\x73\163\141\147\x65\x73\x2e\160\x61\x63\x6b\141\x67\145\137\x75\156\x69\x6e\163\x74\x61\154\154\x65\144\x5f\163\165\x63\143\145\x73\163", ["\x70\141\x63\153\141\x67\x65" => $package])); F2P50: izXKo: } catch (\Exception $e) { Log::error($e); return back()->with("\x65\162\162\157\x72", $e->getMessage()); } return back()->with("\x65\x72\x72\157\x72", trans("\155\145\163\163\x61\x67\x65\x73\56\146\x61\151\154\145\x64")); } public function activation(Request $request, $slug) { if (!(config("\x61\x70\160\x2e\144\145\x6d\157") == true && config("\141\x70\160\x2e\x64\145\142\165\x67") !== true)) { goto DxxdK; } return response("\145\162\x72\157\162", 444); DxxdK: if (!($registered = Package::where("\x73\154\165\147", $slug)->first())) { goto MrTs8; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\143\141\x63\150\145\72\143\154\145\141\162"); return response("\163\165\x63\x63\x65\x73\163", 200); MrTs8: if (!($unregistered = $this->scanPackages($slug))) { goto xKOML; } $registered = Package::create($unregistered); xKOML: return response("\x73\x75\x63\x63\145\163\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto XeNdC; } Artisan::call("\x63\x61\x63\x68\145\x3a\x63\x6c\x65\141\162"); return back()->with("\163\165\143\143\145\163\163", trans("\155\145\163\x73\x61\x67\x65\163\x2e\160\141\x63\x6b\x61\147\145\137\x73\145\x74\x74\151\x6e\147\163\137\165\160\144\x61\164\145\144")); XeNdC: return back()->with("\145\x72\162\x6f\162", trans("\x6d\x65\x73\163\141\147\145\x73\x2e\x66\141\151\x6c\x65\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\141\160\x70\x2e\144\145\x6d\157") == true && config("\141\x70\x70\x2e\x64\145\x62\165\147") !== true)) { goto h680m; } return response("\x65\162\x72\x6f\162", 444); h680m: $updated = DB::table("\x6f\x70\164\151\157\x6e\163")->where("\x6f\160\164\151\157\156\x5f\x6e\141\155\145", $option)->update(["\x6f\160\x74\151\157\x6e\137\166\x61\154\x75\145" => DB::raw("\x4e\x4f\x54\40\x6f\160\164\151\157\156\137\166\141\154\x75\145")]); if (!$updated) { goto H_Lwf; } Artisan::call("\143\x61\x63\150\x65\x3a\x63\154\145\x61\x72"); return response("\163\165\x63\143\x65\x73\x73", 200); H_Lwf: return response("\x65\162\x72\157\x72", 405); } private function scanPackages($slug = null) { $packages = []; foreach (glob(base_path("\x70\141\143\153\x61\147\x65\x73\x2f\52"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\x2f\155\x61\156\x69\146\145\x73\164\x2e\x6a\x73\157\156")) { goto es3jD; } $json = file_get_contents($manifest); if (!($json !== '')) { goto S2lcL; } $data = json_decode($json, true); if (!($data === null)) { goto NMsYT; } throw new \Exception("\x49\156\166\x61\154\x69\x64\40\155\141\156\151\146\x65\163\164\56\x6a\x73\157\x6e\x20\146\x69\154\x65\40\141\164\40\x5b{$dir}\135"); NMsYT: $data["\x70\141\164\x68"] = $dir; if (!($slug && $data["\x73\154\165\147"] == $slug)) { goto rG3HR; } return $data; rG3HR: $packages[] = $data; S2lcL: es3jD: nQXvn: } dU7lv: usort($packages, function ($x, $y) { return strnatcmp($x["\x6e\x61\155\x65"], $y["\156\x61\155\145"]); }); return $packages; } }